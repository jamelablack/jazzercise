class GlobalsDatatable
  delegate :params, :h, :link_to, :number_to_currency, to: :@view

  def initialize(view)
    @view = view
  end

  def as_json(options = {})
    {
      sEcho: params[:sEcho].to_i,
      iTotalRecords: jacsglobal.count,
      iTotalDisplayRecords: jacsglobals.total_entries,
      aaData: data
    }
  end

private

  def data
    jacsglobals.map do |person|
      [
        link_to(jacsglobal.Key_name, jacsglobal),
        h(jacsglobal.Category),
        h(jacsglobal.Str_value),
        h(jacsglobal.Dec_value),
        h(jacsglobal.Datetime_value.strftime("%B %e, %Y")),
        h(jacsglobal.Effective_date.strftime("%B %e, %Y")),
        
      ]
    end
  end

  def jacsglobals
    @jacsglobals ||= fetch_jacsglobals
  end

  def fetch_jacsglobals
    jacsglobals = jacsglobal.order("#{sort_column} #{sort_direction}")
    jacsglobals = jacsglobals.page(page).per_page(per_page)
    if params[:sSearch].present?
      jacsglobals = jacsglobals.where("Key_name like :search or Category like :search", search: "#{params[:sSearch]}%")
    end
   jacsglobals
  end

  def page
    params[:iDisplayStart].to_i/per_page + 1
  end

  def per_page
    params[:iDisplayLength].to_i > 0 ? params[:iDisplayLength].to_i : 10
  end

  def sort_column
    columns = %w[FirstName LastName EMail BirthDate Gender]
    columns[params[:iSortCol_0].to_i]
  end

  def sort_direction
    params[:sSortDir_0] == "desc" ? "desc" : "asc"
  end
end

